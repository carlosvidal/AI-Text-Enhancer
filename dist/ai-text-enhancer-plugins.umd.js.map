{"version":3,"file":"ai-text-enhancer-plugins.umd.js","sources":["../src/plugins/ckeditor-plugin.js","../src/plugins/froala-plugin.js","../src/plugins/quill-plugin.js","../src/plugins/tinymce-plugin.js"],"sourcesContent":["// src/plugins/ckeditor-plugin.js (versión corregida)\n\n/**\n * Plugin para CKEditor 5 que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @returns {Function} - Inicializador del plugin\n */\nexport function CKEditorPlugin(options = {}) {\n  const { enhancerId, buttonTooltip = \"Mejorar con IA\" } = options;\n\n  // Esta función se debería pasar como callback a extraPlugins\n  return function initPlugin(editor) {\n    // Añadir un botón a la barra de herramientas de forma directa\n    // En lugar de usar la API ButtonView\n\n    editor.ui.componentFactory.add(\"aienhancer\", () => {\n      // Crear un botón manualmente\n      const button = document.createElement(\"button\");\n      button.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n        <path d=\"m14 7 3 3\"/>\n      </svg>`;\n      button.title = buttonTooltip;\n      button.className = \"ck ck-button\";\n\n      // Añadir estilos CSS\n      button.style.cssText = `\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        background: #f0f0f0;\n        border: 1px solid #ccc;\n        border-radius: 3px;\n        padding: 4px;\n        cursor: pointer;\n        margin: 2px;\n      `;\n\n      // Añadir eventos\n      button.addEventListener(\"click\", () => {\n        const enhancer = document.getElementById(enhancerId);\n        if (enhancer && typeof enhancer.openModal === \"function\") {\n          enhancer.openModal();\n        } else {\n          console.error(\n            `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n          );\n        }\n      });\n\n      // Devolver el elemento DOM (CKEditor lo añadirá a la UI)\n      return button;\n    });\n\n    // De manera alternativa, podemos observar cuando la barra de herramientas está lista\n    // y añadir nuestro botón directamente\n    setTimeout(() => {\n      try {\n        // Buscar la barra de herramientas de CKEditor\n        const editor_element = document.querySelector(\".ck-editor__main\");\n        if (editor_element) {\n          const toolbar = document.querySelector(\".ck-toolbar\");\n          if (toolbar) {\n            // Crear botón si no existe ya\n            if (!toolbar.querySelector(\".ai-enhancer-button\")) {\n              const button = document.createElement(\"button\");\n              button.className = \"ck ck-button ai-enhancer-button\";\n              button.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n                <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n                <path d=\"m14 7 3 3\"/>\n              </svg>`;\n              button.title = buttonTooltip;\n\n              button.addEventListener(\"click\", () => {\n                const enhancer = document.getElementById(enhancerId);\n                if (enhancer && typeof enhancer.openModal === \"function\") {\n                  enhancer.openModal();\n                } else {\n                  console.error(\n                    `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n                  );\n                }\n              });\n\n              toolbar.appendChild(button);\n              console.log(\"CKEditor AI enhancer button added\");\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error adding button to CKEditor:\", error);\n      }\n    }, 500);\n  };\n}\n","// src/plugins/froala-plugin.js (versión corregida)\n\n/**\n * Plugin para Froala Editor que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @returns {Object} - Plugin de Froala\n */\nexport function FroalaPlugin(options = {}) {\n  const { enhancerId, buttonTooltip = \"Mejorar con IA\" } = options;\n\n  // Esta función se llama para registrar el plugin\n  return function manualPlugin() {\n    // No usamos la estructura estándar de plugin de Froala\n    // En su lugar, añadimos manualmente un botón cuando Froala esté listo\n\n    setTimeout(() => {\n      try {\n        // Buscar la barra de herramientas de Froala\n        const froalaContainer = document.querySelector(\".fr-box\");\n        if (!froalaContainer) {\n          console.warn(\"Froala container not found\");\n          return;\n        }\n\n        const toolbar = froalaContainer.querySelector(\".fr-toolbar\");\n        if (!toolbar) {\n          console.warn(\"Froala toolbar not found\");\n          return;\n        }\n\n        // Verificar si ya existe nuestro botón\n        if (toolbar.querySelector(\".ai-enhancer-button\")) {\n          return;\n        }\n\n        // Crear un nuevo grupo de botones\n        const buttonGroup = document.createElement(\"div\");\n        buttonGroup.className = \"fr-btn-grp\";\n\n        // Crear el botón\n        const button = document.createElement(\"button\");\n        button.className = \"fr-command fr-btn ai-enhancer-button\";\n        button.title = buttonTooltip;\n        button.innerHTML = `\n          <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n            <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n            <path d=\"m14 7 3 3\"/>\n          </svg>\n        `;\n\n        // Añadir evento\n        button.addEventListener(\"click\", () => {\n          const enhancer = document.getElementById(enhancerId);\n          if (enhancer && typeof enhancer.openModal === \"function\") {\n            enhancer.openModal();\n          } else {\n            console.error(\n              `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n            );\n          }\n        });\n\n        // Añadir botón al grupo\n        buttonGroup.appendChild(button);\n\n        // Añadir grupo a la barra de herramientas\n        const lastGroup = toolbar.querySelector(\".fr-btn-grp:last-child\");\n        if (lastGroup) {\n          toolbar.insertBefore(buttonGroup, lastGroup.nextSibling);\n        } else {\n          toolbar.appendChild(buttonGroup);\n        }\n\n        console.log(\"Froala AI enhancer button added successfully\");\n      } catch (error) {\n        console.error(\"Error adding button to Froala:\", error);\n      }\n    }, 1000); // Dar tiempo a Froala para inicializarse completamente\n  };\n}\n","// src/plugins/quill-plugin.js (versión corregida)\n\n/**\n * Plugin para Quill que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @param {string} options.iconHTML - HTML del icono del botón\n * @returns {Function} - Función para registrar el plugin\n */\nexport function QuillPlugin(options = {}) {\n  const {\n    enhancerId,\n    buttonTooltip = \"Mejorar con IA\",\n    iconHTML = `<svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n      <path d=\"m14 7 3 3\"/>\n    </svg>`,\n  } = options;\n\n  return function (quill) {\n    // Asegurarnos de que Quill esté completamente inicializado\n    setTimeout(() => {\n      try {\n        // Obtener la barra de herramientas con una búsqueda más robusta\n        const container = quill.container;\n        const toolbar = container.querySelector(\".ql-toolbar\");\n\n        if (!toolbar) {\n          console.warn(\"Quill toolbar not found, waiting...\");\n\n          // Intentar de nuevo en 500ms\n          setTimeout(() => {\n            const retryToolbar = container.querySelector(\".ql-toolbar\");\n            if (retryToolbar) {\n              addButton(retryToolbar);\n            } else {\n              console.error(\"Quill toolbar not found after retry\");\n            }\n          }, 500);\n\n          return;\n        }\n\n        addButton(toolbar);\n      } catch (error) {\n        console.error(\"Error initializing Quill plugin:\", error);\n      }\n    }, 100);\n\n    // Función para añadir el botón a la barra de herramientas\n    function addButton(toolbar) {\n      // Crear el botón\n      const button = document.createElement(\"button\");\n      button.className = \"ql-ai-enhancer\";\n      button.innerHTML = iconHTML;\n      button.title = buttonTooltip;\n\n      // Estilizar el botón\n      button.style.cssText = `\n        display: inline-block;\n        height: 24px;\n        width: 28px;\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        padding: 3px;\n        position: relative;\n      `;\n\n      // Escuchar clics\n      button.addEventListener(\"click\", () => {\n        const enhancer = document.getElementById(enhancerId);\n        if (enhancer && typeof enhancer.openModal === \"function\") {\n          enhancer.openModal();\n        } else {\n          console.error(\n            `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n          );\n        }\n      });\n\n      // Añadir el botón a la barra de herramientas\n      toolbar.appendChild(button);\n      console.log(\"Quill AI enhancer button added successfully\");\n    }\n\n    // Devolver funciones del plugin\n    return {\n      destroy: function () {\n        const button = quill.container.querySelector(\".ql-ai-enhancer\");\n        if (button) {\n          button.removeEventListener(\"click\");\n          button.parentNode.removeChild(button);\n        }\n      },\n    };\n  };\n}\n","/**\n * Plugin para TinyMCE que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @param {string} options.buttonIcon - Icono SVG para el botón\n * @returns {Object} - Plugin de TinyMCE\n */\nexport function TinyMCEPlugin(options = {}) {\n  const {\n    enhancerId,\n    buttonTooltip = \"Mejorar con IA\",\n    buttonIcon = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/><path d=\"m14 7 3 3\"/></svg>',\n  } = options;\n\n  return function (editor) {\n    // Registrar el botón en TinyMCE\n    editor.ui.registry.addButton(\"aienhancer\", {\n      icon: \"magic\", // Icono predefinido o usar tu SVG personalizado\n      tooltip: buttonTooltip,\n      onAction: function () {\n        // Guardar la selección actual\n        const currentSelection = editor.selection.getContent();\n\n        // Buscar el componente enhancer\n        const enhancer = document.getElementById(enhancerId);\n        if (enhancer && typeof enhancer.openModal === \"function\") {\n          // Configurar un listener para el evento 'ai-content-generated'\n          const handleContentGenerated = (event) => {\n            const generatedContent = event.detail.content;\n\n            // Insertar el contenido en TinyMCE\n            if (generatedContent) {\n              // Si hay una selección, reemplazarla; si no, insertar al final\n              if (currentSelection) {\n                editor.selection.setContent(generatedContent);\n              } else {\n                editor.setContent(generatedContent);\n              }\n              editor.undoManager.add(); // Permitir deshacer\n            }\n\n            // Eliminar este listener después de usarlo\n            enhancer.removeEventListener(\n              \"ai-content-generated\",\n              handleContentGenerated\n            );\n          };\n\n          // Añadir el listener para capturar el contenido generado\n          enhancer.addEventListener(\n            \"ai-content-generated\",\n            handleContentGenerated\n          );\n\n          // Abrir el modal\n          enhancer.openModal();\n        } else {\n          console.error(\n            `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n          );\n        }\n      },\n    });\n\n    // También añadir un método para acceso directo desde el componente\n    editor.addCommand(\"insertAIContent\", function (content) {\n      editor.selection.setContent(content);\n      editor.undoManager.add();\n    });\n\n    // Registrar el plugin (opcional)\n    return {\n      getMetadata: function () {\n        return {\n          name: \"AI Text Enhancer\",\n          url: \"https://github.com/yourusername/ai-text-enhancer\",\n        };\n      },\n    };\n  };\n}\n"],"names":["options","enhancerId","buttonTooltip","editor","ui","componentFactory","add","button","document","createElement","innerHTML","title","className","style","cssText","addEventListener","enhancer","getElementById","openModal","console","error","setTimeout","querySelector","toolbar","appendChild","log","froalaContainer","warn","buttonGroup","lastGroup","insertBefore","nextSibling","iconHTML","quill","addButton","container","retryToolbar","destroy","removeEventListener","parentNode","removeChild","buttonIcon","registry","icon","tooltip","onAction","currentSelection","selection","getContent","handleContentGenerated","event","generatedContent","detail","content","setContent","undoManager","addCommand","getMetadata","name","url"],"mappings":"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"}