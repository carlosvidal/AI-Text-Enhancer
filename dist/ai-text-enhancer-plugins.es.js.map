{"version":3,"file":"ai-text-enhancer-plugins.es.js","sources":["../src/plugins/tinymce-plugin.js","../src/plugins/ckeditor-plugin.js","../src/plugins/quill-plugin.js","../src/plugins/froala-plugin.js"],"sourcesContent":["/**\n * Plugin para TinyMCE que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @param {string} options.buttonIcon - Icono SVG para el botón\n * @returns {Object} - Plugin de TinyMCE\n */\nexport function TinyMCEPlugin(options = {}) {\n  const {\n    enhancerId,\n    buttonTooltip = \"Mejorar con IA\",\n    buttonIcon = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/><path d=\"m14 7 3 3\"/></svg>',\n  } = options;\n\n  return function (editor) {\n    // Registrar el botón en TinyMCE\n    editor.ui.registry.addButton(\"aienhancer\", {\n      icon: \"magic\", // Icono predefinido o usar tu SVG personalizado\n      tooltip: buttonTooltip,\n      onAction: function () {\n        // Guardar la selección actual\n        const currentSelection = editor.selection.getContent();\n\n        // Buscar el componente enhancer\n        const enhancer = document.getElementById(enhancerId);\n        if (enhancer && typeof enhancer.openModal === \"function\") {\n          // Configurar un listener para el evento 'ai-content-generated'\n          const handleContentGenerated = (event) => {\n            const generatedContent = event.detail.content;\n\n            // Insertar el contenido en TinyMCE\n            if (generatedContent) {\n              // Si hay una selección, reemplazarla; si no, insertar al final\n              if (currentSelection) {\n                editor.selection.setContent(generatedContent);\n              } else {\n                editor.setContent(generatedContent);\n              }\n              editor.undoManager.add(); // Permitir deshacer\n            }\n\n            // Eliminar este listener después de usarlo\n            enhancer.removeEventListener(\n              \"ai-content-generated\",\n              handleContentGenerated\n            );\n          };\n\n          // Añadir el listener para capturar el contenido generado\n          enhancer.addEventListener(\n            \"ai-content-generated\",\n            handleContentGenerated\n          );\n\n          // Abrir el modal\n          enhancer.openModal();\n        } else {\n          console.error(\n            `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n          );\n        }\n      },\n    });\n\n    // También añadir un método para acceso directo desde el componente\n    editor.addCommand(\"insertAIContent\", function (content) {\n      editor.selection.setContent(content);\n      editor.undoManager.add();\n    });\n\n    // Registrar el plugin (opcional)\n    return {\n      getMetadata: function () {\n        return {\n          name: \"AI Text Enhancer\",\n          url: \"https://github.com/yourusername/ai-text-enhancer\",\n        };\n      },\n    };\n  };\n}\n","// src/plugins/ckeditor-plugin.js (versión corregida)\n\n/**\n * Plugin para CKEditor 5 que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @returns {Function} - Inicializador del plugin\n */\nexport function CKEditorPlugin(options = {}) {\n  const { enhancerId, buttonTooltip = \"Mejorar con IA\" } = options;\n\n  // Esta función se debería pasar como callback a extraPlugins\n  return function initPlugin(editor) {\n    // Añadir un botón a la barra de herramientas de forma directa\n    // En lugar de usar la API ButtonView\n\n    editor.ui.componentFactory.add(\"aienhancer\", () => {\n      // Crear un botón manualmente\n      const button = document.createElement(\"button\");\n      button.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n        <path d=\"m14 7 3 3\"/>\n      </svg>`;\n      button.title = buttonTooltip;\n      button.className = \"ck ck-button\";\n\n      // Añadir estilos CSS\n      button.style.cssText = `\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        background: #f0f0f0;\n        border: 1px solid #ccc;\n        border-radius: 3px;\n        padding: 4px;\n        cursor: pointer;\n        margin: 2px;\n      `;\n\n      // Añadir eventos\n      button.addEventListener(\"click\", () => {\n        const enhancer = document.getElementById(enhancerId);\n        if (enhancer && typeof enhancer.openModal === \"function\") {\n          enhancer.openModal();\n        } else {\n          console.error(\n            `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n          );\n        }\n      });\n\n      // Devolver el elemento DOM (CKEditor lo añadirá a la UI)\n      return button;\n    });\n\n    // De manera alternativa, podemos observar cuando la barra de herramientas está lista\n    // y añadir nuestro botón directamente\n    setTimeout(() => {\n      try {\n        // Buscar la barra de herramientas de CKEditor\n        const editor_element = document.querySelector(\".ck-editor__main\");\n        if (editor_element) {\n          const toolbar = document.querySelector(\".ck-toolbar\");\n          if (toolbar) {\n            // Crear botón si no existe ya\n            if (!toolbar.querySelector(\".ai-enhancer-button\")) {\n              const button = document.createElement(\"button\");\n              button.className = \"ck ck-button ai-enhancer-button\";\n              button.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n                <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n                <path d=\"m14 7 3 3\"/>\n              </svg>`;\n              button.title = buttonTooltip;\n\n              button.addEventListener(\"click\", () => {\n                const enhancer = document.getElementById(enhancerId);\n                if (enhancer && typeof enhancer.openModal === \"function\") {\n                  enhancer.openModal();\n                } else {\n                  console.error(\n                    `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n                  );\n                }\n              });\n\n              toolbar.appendChild(button);\n              console.log(\"CKEditor AI enhancer button added\");\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error adding button to CKEditor:\", error);\n      }\n    }, 500);\n  };\n}\n","// src/plugins/quill-plugin.js (versión corregida)\n\n/**\n * Plugin para Quill que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @param {string} options.iconHTML - HTML del icono del botón\n * @returns {Function} - Función para registrar el plugin\n */\nexport function QuillPlugin(options = {}) {\n  const {\n    enhancerId,\n    buttonTooltip = \"Mejorar con IA\",\n    iconHTML = `<svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n      <path d=\"m14 7 3 3\"/>\n    </svg>`,\n  } = options;\n\n  return function (quill) {\n    // Asegurarnos de que Quill esté completamente inicializado\n    setTimeout(() => {\n      try {\n        // Obtener la barra de herramientas con una búsqueda más robusta\n        const container = quill.container;\n        const toolbar = container.querySelector(\".ql-toolbar\");\n\n        if (!toolbar) {\n          console.warn(\"Quill toolbar not found, waiting...\");\n\n          // Intentar de nuevo en 500ms\n          setTimeout(() => {\n            const retryToolbar = container.querySelector(\".ql-toolbar\");\n            if (retryToolbar) {\n              addButton(retryToolbar);\n            } else {\n              console.error(\"Quill toolbar not found after retry\");\n            }\n          }, 500);\n\n          return;\n        }\n\n        addButton(toolbar);\n      } catch (error) {\n        console.error(\"Error initializing Quill plugin:\", error);\n      }\n    }, 100);\n\n    // Función para añadir el botón a la barra de herramientas\n    function addButton(toolbar) {\n      // Crear el botón\n      const button = document.createElement(\"button\");\n      button.className = \"ql-ai-enhancer\";\n      button.innerHTML = iconHTML;\n      button.title = buttonTooltip;\n\n      // Estilizar el botón\n      button.style.cssText = `\n        display: inline-block;\n        height: 24px;\n        width: 28px;\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        padding: 3px;\n        position: relative;\n      `;\n\n      // Escuchar clics\n      button.addEventListener(\"click\", () => {\n        const enhancer = document.getElementById(enhancerId);\n        if (enhancer && typeof enhancer.openModal === \"function\") {\n          enhancer.openModal();\n        } else {\n          console.error(\n            `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n          );\n        }\n      });\n\n      // Añadir el botón a la barra de herramientas\n      toolbar.appendChild(button);\n      console.log(\"Quill AI enhancer button added successfully\");\n    }\n\n    // Devolver funciones del plugin\n    return {\n      destroy: function () {\n        const button = quill.container.querySelector(\".ql-ai-enhancer\");\n        if (button) {\n          button.removeEventListener(\"click\");\n          button.parentNode.removeChild(button);\n        }\n      },\n    };\n  };\n}\n","// src/plugins/froala-plugin.js (versión corregida)\n\n/**\n * Plugin para Froala Editor que añade un botón para mejorar el texto con IA\n * @param {Object} options - Opciones de configuración\n * @param {string} options.enhancerId - ID del componente ai-text-enhancer\n * @param {string} options.buttonTooltip - Texto del tooltip del botón\n * @returns {Object} - Plugin de Froala\n */\nexport function FroalaPlugin(options = {}) {\n  const { enhancerId, buttonTooltip = \"Mejorar con IA\" } = options;\n\n  // Esta función se llama para registrar el plugin\n  return function manualPlugin() {\n    // No usamos la estructura estándar de plugin de Froala\n    // En su lugar, añadimos manualmente un botón cuando Froala esté listo\n\n    setTimeout(() => {\n      try {\n        // Buscar la barra de herramientas de Froala\n        const froalaContainer = document.querySelector(\".fr-box\");\n        if (!froalaContainer) {\n          console.warn(\"Froala container not found\");\n          return;\n        }\n\n        const toolbar = froalaContainer.querySelector(\".fr-toolbar\");\n        if (!toolbar) {\n          console.warn(\"Froala toolbar not found\");\n          return;\n        }\n\n        // Verificar si ya existe nuestro botón\n        if (toolbar.querySelector(\".ai-enhancer-button\")) {\n          return;\n        }\n\n        // Crear un nuevo grupo de botones\n        const buttonGroup = document.createElement(\"div\");\n        buttonGroup.className = \"fr-btn-grp\";\n\n        // Crear el botón\n        const button = document.createElement(\"button\");\n        button.className = \"fr-command fr-btn ai-enhancer-button\";\n        button.title = buttonTooltip;\n        button.innerHTML = `\n          <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n            <path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"/>\n            <path d=\"m14 7 3 3\"/>\n          </svg>\n        `;\n\n        // Añadir evento\n        button.addEventListener(\"click\", () => {\n          const enhancer = document.getElementById(enhancerId);\n          if (enhancer && typeof enhancer.openModal === \"function\") {\n            enhancer.openModal();\n          } else {\n            console.error(\n              `AI Text Enhancer with ID \"${enhancerId}\" not found or not initialized`\n            );\n          }\n        });\n\n        // Añadir botón al grupo\n        buttonGroup.appendChild(button);\n\n        // Añadir grupo a la barra de herramientas\n        const lastGroup = toolbar.querySelector(\".fr-btn-grp:last-child\");\n        if (lastGroup) {\n          toolbar.insertBefore(buttonGroup, lastGroup.nextSibling);\n        } else {\n          toolbar.appendChild(buttonGroup);\n        }\n\n        console.log(\"Froala AI enhancer button added successfully\");\n      } catch (error) {\n        console.error(\"Error adding button to Froala:\", error);\n      }\n    }, 1000); // Dar tiempo a Froala para inicializarse completamente\n  };\n}\n"],"names":[],"mappings":"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"}